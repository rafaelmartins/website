name: Docker
on:
  push:
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: docker
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: tags
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            tags="${REGISTRY}/${IMAGE_NAME}:latest"
          else
            tags="${REGISTRY}/${IMAGE_NAME}:${{ github.ref_name }}"
          fi
          echo "tags=${tags}" >> $GITHUB_OUTPUT

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  test-action:
    runs-on: ubuntu-latest
    needs: build-and-push-image

    strategy:
      matrix:
        config:
          - config.yml
          - foo/config-foo.yml
        source:
          - ./
          - foo/
        destination:
          - _build
          - foo/_build

    steps:
      - uses: actions/checkout@v4

      - run: |
          mkdir -p "$(dirname "${{ matrix.config }}")"
          mkdir -p "${{ matrix.source }}"
          echo "---" > "${{ matrix.config }}"

      - uses: ./
        with:
          source: ${{ matrix.source }}
          destination: ${{ matrix.destination }}
          configuration: ${{ matrix.config }}

      - run: |
          [[ -d "${{ matrix.destination }}/assets" ]]

  cleanup-images:
    runs-on: ubuntu-latest
    needs: test-action

    steps:
      - id: image
        run: echo "name=$(echo "${IMAGE_NAME}" | cut -d/ -f2)" >> $GITHUB_OUTPUT

      - uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ steps.image.outputs.name }}
          package-type: 'container'
          delete-only-untagged-versions: 'true'
